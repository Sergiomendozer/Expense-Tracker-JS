{"mappings":"AAAA,MAAM,UAAU,SAAS,cAAc,CAAC;AACxC,MAAM,aAAa,SAAS,cAAc,CAAC;AAC3C,MAAM,cAAc,SAAS,cAAc,CAAC;AAC5C,MAAM,OAAO,SAAS,cAAc,CAAC;AACrC,MAAM,OAAO,SAAS,cAAc,CAAC;AACrC,MAAM,OAAO,SAAS,cAAc,CAAC;AACrC,MAAM,SAAS,SAAS,cAAc,CAAC;AAEvC,8BAA8B;AAC9B,4CAA4C;AAC5C,4CAA4C;AAC5C,0CAA0C;AAC1C,2CAA2C;AAC3C,KAAK;AAEL,MAAM,2BAA2B,KAAK,KAAK,CACzC,aAAa,OAAO,CAAC;AAGvB,IAAI,eACF,aAAa,OAAO,CAAC,oBAAoB,OAAO,2BAA2B,EAAE;AAE/E,kBAAkB;AAClB,SAAS,eAAe,CAAC;IACvB,EAAE,cAAc;IAEhB,IAAI,KAAK,KAAK,CAAC,IAAI,OAAO,MAAM,OAAO,KAAK,CAAC,IAAI,OAAO,IACtD,MAAM;SACD;QACL,MAAM,cAAc;YAClB,IAAI;YACJ,MAAM,KAAK,KAAK;YAChB,QAAQ,CAAC,OAAO,KAAK;QACvB;QAEA,aAAa,IAAI,CAAC;QAElB,kBAAkB;QAElB;QAEA;QAEA,KAAK,KAAK,GAAG;QACb,OAAO,KAAK,GAAG;IACjB;AACF;AAEA,qBAAqB;AACrB,SAAS;IACP,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK;AACpC;AAEA,+BAA+B;AAC/B,SAAS,kBAAkB,WAAW;IACpC,WAAW;IACX,MAAM,OAAO,YAAY,MAAM,GAAG,IAAI,MAAM;IAE5C,MAAM,OAAO,SAAS,aAAa,CAAC;IAEpC,2BAA2B;IAC3B,KAAK,SAAS,CAAC,GAAG,CAAC,YAAY,MAAM,GAAG,IAAI,UAAU;IAEtD,KAAK,SAAS,GAAG,CAAC;IAChB,EAAE,YAAY,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,GAAG,CAC3C,YAAY,MAAM,EAClB,8DAA8D,EAC9D,YAAY,EAAE,CACf;EACD,CAAC;IAED,KAAK,WAAW,CAAC;AACnB;AAEA,yCAAyC;AACzC,SAAS;IACP,MAAM,UAAU,aAAa,GAAG,CAAC,CAAA,cAAe,YAAY,MAAM;IAElE,MAAM,QAAQ,QAAQ,MAAM,CAAC,CAAC,KAAK,OAAU,OAAO,MAAO,GAAG,OAAO,CAAC;IAEtE,MAAM,SAAS,QACZ,MAAM,CAAC,CAAA,OAAQ,OAAO,GACtB,MAAM,CAAC,CAAC,KAAK,OAAU,OAAO,MAAO,GACrC,OAAO,CAAC;IAEX,MAAM,UAAU,AACd,CAAA,QAAQ,MAAM,CAAC,CAAA,OAAQ,OAAO,GAAG,MAAM,CAAC,CAAC,KAAK,OAAU,OAAO,MAAO,KACtE,EAAC,EACD,OAAO,CAAC;IAEV,QAAQ,SAAS,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC;IAC/B,WAAW,SAAS,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC;IACnC,YAAY,SAAS,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC;AACvC;AAEA,2BAA2B;AAC3B,SAAS,kBAAkB,EAAE;IAC3B,eAAe,aAAa,MAAM,CAAC,CAAA,cAAe,YAAY,EAAE,KAAK;IAErE;IAEA;AACF;AAEA,oCAAoC;AACpC,SAAS;IACP,aAAa,OAAO,CAAC,gBAAgB,KAAK,SAAS,CAAC;AACtD;AAEA,WAAW;AACX,SAAS;IACP,KAAK,SAAS,GAAG;IAEjB,aAAa,OAAO,CAAC;IACrB;AACF;AAEA;AAEA,KAAK,gBAAgB,CAAC,UAAU","sources":["src/index.mjs"],"sourcesContent":["const balance = document.getElementById('balance');\nconst money_plus = document.getElementById('money-plus');\nconst money_minus = document.getElementById('money-minus');\nconst list = document.getElementById('list');\nconst form = document.getElementById('form');\nconst text = document.getElementById('text');\nconst amount = document.getElementById('amount');\n\n// const dummyTransactions = [\n//   { id: 1, text: 'Flower', amount: -20 },\n//   { id: 2, text: 'Salary', amount: 300 },\n//   { id: 3, text: 'Book', amount: -10 },\n//   { id: 4, text: 'Camera', amount: 150 }\n// ];\n\nconst localStorageTransactions = JSON.parse(\n  localStorage.getItem('transactions')\n);\n\nlet transactions =\n  localStorage.getItem('transactions') !== null ? localStorageTransactions : [];\n\n// Add transaction\nfunction addTransaction(e) {\n  e.preventDefault();\n\n  if (text.value.trim() === '' || amount.value.trim() === '') {\n    alert('Please add a text and amount');\n  } else {\n    const transaction = {\n      id: generateID(),\n      text: text.value,\n      amount: +amount.value\n    };\n\n    transactions.push(transaction);\n\n    addTransactionDOM(transaction);\n\n    updateValues();\n\n    updateLocalStorage();\n\n    text.value = '';\n    amount.value = '';\n  }\n}\n\n// Generate random ID\nfunction generateID() {\n  return Math.floor(Math.random() * 100000000);\n}\n\n// Add transactions to DOM list\nfunction addTransactionDOM(transaction) {\n  // Get sign\n  const sign = transaction.amount < 0 ? '-' : '+';\n\n  const item = document.createElement('li');\n\n  // Add class based on value\n  item.classList.add(transaction.amount < 0 ? 'minus' : 'plus');\n\n  item.innerHTML = `\n    ${transaction.text} <span>${sign}${Math.abs(\n    transaction.amount\n  )}</span> <button class=\"delete-btn\" onclick=\"removeTransaction(${\n    transaction.id\n  })\">x</button>\n  `;\n\n  list.appendChild(item);\n}\n\n// Update the balance, income and expense\nfunction updateValues() {\n  const amounts = transactions.map(transaction => transaction.amount);\n\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n\n  const income = amounts\n    .filter(item => item > 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n  const expense = (\n    amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\n    -1\n  ).toFixed(2);\n\n  balance.innerText = `$${total}`;\n  money_plus.innerText = `$${income}`;\n  money_minus.innerText = `$${expense}`;\n}\n\n// Remove transaction by ID\nfunction removeTransaction(id) {\n  transactions = transactions.filter(transaction => transaction.id !== id);\n\n  updateLocalStorage();\n\n  init();\n}\n\n// Update local storage transactions\nfunction updateLocalStorage() {\n  localStorage.setItem('transactions', JSON.stringify(transactions));\n}\n\n// Init app\nfunction init() {\n  list.innerHTML = '';\n\n  transactions.forEach(addTransactionDOM);\n  updateValues();\n}\n\ninit();\n\nform.addEventListener('submit', addTransaction);"],"names":[],"version":3,"file":"index.3e24aa3c.js.map","sourceRoot":"/__parcel_source_root/"}